# Generated by Django 5.2.4 on 2025-09-11 05:43

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('batchdb', '0001_initial'),
        ('studentsdb', '0001_initial'),
        ('trainersdb', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BatchStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('activated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('deactivated_at', models.DateTimeField(blank=True, null=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='batchdb.batch')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentsdb.student')),
            ],
            options={
                'verbose_name': 'Batch Student',
                'verbose_name_plural': 'Batch Students',
                'unique_together': {('batch', 'student')},
            },
        ),
        migrations.RemoveField(
            model_name='batch',
            name='students',
        ),
        migrations.AddField(
            model_name='batch',
            name='students',
            field=models.ManyToManyField(blank=True, related_name='batches', through='batchdb.BatchStudent', to='studentsdb.student'),
        ),
        migrations.CreateModel(
            name='TrainerHandover',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_handovers', to=settings.AUTH_USER_MODEL)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_handovers', to='batchdb.batch')),
                ('from_trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='handovers_from', to='trainersdb.trainer')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_handovers', to=settings.AUTH_USER_MODEL)),
                ('to_trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='handovers_to', to='trainersdb.trainer')),
            ],
            options={
                'verbose_name': 'Trainer Handover',
                'verbose_name_plural': 'Trainer Handovers',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='TransferRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_transfers', to=settings.AUTH_USER_MODEL)),
                ('from_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_requests_from', to='batchdb.batch')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_transfers', to=settings.AUTH_USER_MODEL)),
                ('students', models.ManyToManyField(related_name='transfer_requests', to='studentsdb.student')),
                ('to_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_requests_to', to='batchdb.batch')),
            ],
            options={
                'verbose_name': 'Transfer Request',
                'verbose_name_plural': 'Transfer Requests',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='BatchTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('BATCH_CREATED', 'Batch Created'), ('BATCH_UPDATED', 'Batch Updated'), ('STUDENT_ADDED', 'Student Added'), ('STUDENT_REMOVED', 'Student Removed'), ('TRANSFER_OUT', 'Transfer Out'), ('TRANSFER_IN', 'Transfer In'), ('TRAINER_HANDOVER', 'Trainer Handover')], max_length=20)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('details', models.JSONField(blank=True, help_text='Additional details about the transaction', null=True)),
                ('affected_students', models.ManyToManyField(blank=True, related_name='batch_transactions', to='studentsdb.student')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='batchdb.batch')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='batch_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Batch Transaction',
                'verbose_name_plural': 'Batch Transactions',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['batch', 'transaction_type'], name='batchdb_bat_batch_i_2920b3_idx'), models.Index(fields=['timestamp'], name='batchdb_bat_timesta_2c7b97_idx')],
            },
        ),
    ]
